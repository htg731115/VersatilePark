<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hds.ssm.dao.PayComboDao">
    <select id="getPayComboById" resultType="com.hds.ssm.model.PayCombo">
        SELECT combo_name,effective_length,money
        FROM pay_combo
        WHERE combo_id=#{combo_id};
    </select>
    <select id="getPaycomboList" resultType="com.hds.ssm.model.PayComboListRQ">
        SELECT
            combo_id,
            combo_name,
            effective_length,
            start_time,
            end_time,
            money,
            p.id AS 'project_id',
            b.NAME AS 'manager_name',
            p.NAME AS 'project_name'
        FROM
            pay_combo a  LEFT JOIN manager_info b ON (a.manager_id = b.id)  LEFT JOIN project_info p ON (a.project_id = p.id)
        WHERE a.combo_id not IN (0,1)
    </select>
    <select id="getLogPayCombo" resultType="com.hds.ssm.model.PayCombo">
        SELECT id,effective_length,bf_combo_name as 'combo_name' ,bf_money as 'money',alter_time
        FROM log_pay_combo
        WHERE combo_id=#{combo_id}
        order by alter_time desc
        LIMIT 6
    </select>
    <select id="searchComboByName" resultType="com.hds.ssm.model.PayComboListRQ">
         SELECT
            combo_id,
            combo_name,
            effective_length,
            start_time,
            end_time,
            money,
            p.id AS 'project_id',
            b.NAME AS 'manager_name',
            p.NAME AS 'project_name'
        FROM
             pay_combo a  LEFT JOIN manager_info b ON (a.manager_id = b.id)  LEFT JOIN project_info p ON (a.project_id = p.id)
        <where>
            a.combo_id not IN (0,1)
            <if test="project_name !=null and !''.equals(project_name.trim()) ">
              AND p.name like CONCAT('%',#{project_name},'%')
            </if>
            <if test="combo_name !=null and !''.equals(combo_name.trim())">
              AND combo_name like CONCAT('%',#{combo_name},'%')
            </if>
        </where>

    </select>

    <select id="managerSearchComboByName" resultType="com.hds.ssm.model.PayCombo">
        SELECT
            *
        FROM
            pay_combo
        WHERE
            project_id = #{projectId}
        AND state != 0 AND combo_name LIKE '%${comboName}%'
    </select>


    <select id="getPayComboByProjectId" resultType="com.hds.ssm.model.PayCombo">
        select * from pay_combo
        where project_id = #{projectId}
        and state != 0
        order by state
    </select>

    <select id="canSell" resultType="java.lang.Integer">
        select count(combo_id) from pay_combo
        where state =1 and project_id = #{projectId}
    </select>

    <update id="editPayCombo">
        UPDATE pay_combo p SET combo_name = #{combo_name},effective_length = #{effective_length},money = #{money}
        <if test="start_time != null">
            ,start_time =#{start_time}
        </if>
        <if test="end_time">
            ,end_time =#{end_time}
        </if>
        WHERE (`combo_id`=#{combo_id});


    </update>

    <update id="sellPayCombo">
        update pay_combo set state = 1 ,manager_id = #{managerId}  where combo_id = #{comboId}
    </update>

    <update id="unsellPayCombo">
        update pay_combo set state = 2 where combo_id = #{comboId}
    </update>

    <insert id="insertLogPayCombo">
        INSERT INTO `spring`.`log_pay_combo` (
        `combo_id`,
        `bf_combo_name`,
        `effective_length`,
        `bf_money`,
        `manage_id`,
        `alter_time`)
        VALUES(
           #{combo_id},
           #{combo_name},
           #{effective_length},
           #{money},
           #{manage_id},
           #{alter_time}
        )
    </insert>
    <insert id="managerAddPayCombo">
       INSERT INTO pay_combo (project_id, effective_length, money, start_time, end_time,combo_name,manager_id,state)
       values (
          #{projectId},
          #{effective_length},
          #{money},
          #{start_time},
          #{end_time},
          #{combo_name},
          #{managerId},
          2
       )
    </insert>
    <update id="deletePayCombo" >
        update pay_combo set state =0 where combo_id=#{combo_id}
    </update>
</mapper>